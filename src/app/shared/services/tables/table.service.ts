import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';

@Injectable()
export class TableService {
    private readonly url = 'service/table'

    constructor(private http: HttpClient) { }

    async getData(dataType: string): Promise<any> {
        // const data = []
        // for(let i=0; i<1000; i++) {
        //     data.push(i)
        // }

        // let data;
        // await this.http.get(`${this.url}/${dataType}`).subscribe((recv) => data = recv)
        // return data

        return {
            'A': [1, 2, 'EXAMPLE_STRING', 2, 'EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING'],
            'B': [2, 3, 'EXAMPLE_STRING', 2, 'EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING'],
            'C': [3, 1, 'EXAMPLE_STRING', 2,'EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING','EXAMPLE_STRING']


            // 'Kolumna 1': data,
            // 'Kolumna 2': Array.from(data).reverse(),
            // 'Kolumna 3': data.map(val => val + '^2'),
            // 'Kolumna 4': data.map(val => val + '^2').reverse()
        }
    }
}
